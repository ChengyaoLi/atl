// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: attitude_setpoint.proto

#ifndef PROTOBUF_attitude_5fsetpoint_2eproto__INCLUDED
#define PROTOBUF_attitude_5fsetpoint_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace wavesim_msgs {
namespace msgs {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_attitude_5fsetpoint_2eproto();
void protobuf_AssignDesc_attitude_5fsetpoint_2eproto();
void protobuf_ShutdownFile_attitude_5fsetpoint_2eproto();

class AttitudeSetpoint;

// ===================================================================

class AttitudeSetpoint : public ::google::protobuf::Message {
 public:
  AttitudeSetpoint();
  virtual ~AttitudeSetpoint();

  AttitudeSetpoint(const AttitudeSetpoint& from);

  inline AttitudeSetpoint& operator=(const AttitudeSetpoint& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AttitudeSetpoint& default_instance();

  void Swap(AttitudeSetpoint* other);

  // implements Message ----------------------------------------------

  AttitudeSetpoint* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AttitudeSetpoint& from);
  void MergeFrom(const AttitudeSetpoint& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required double roll = 1;
  inline bool has_roll() const;
  inline void clear_roll();
  static const int kRollFieldNumber = 1;
  inline double roll() const;
  inline void set_roll(double value);

  // required double pitch = 2;
  inline bool has_pitch() const;
  inline void clear_pitch();
  static const int kPitchFieldNumber = 2;
  inline double pitch() const;
  inline void set_pitch(double value);

  // required double yaw = 3;
  inline bool has_yaw() const;
  inline void clear_yaw();
  static const int kYawFieldNumber = 3;
  inline double yaw() const;
  inline void set_yaw(double value);

  // required double throttle = 4;
  inline bool has_throttle() const;
  inline void clear_throttle();
  static const int kThrottleFieldNumber = 4;
  inline double throttle() const;
  inline void set_throttle(double value);

  // @@protoc_insertion_point(class_scope:wavesim_msgs.msgs.AttitudeSetpoint)
 private:
  inline void set_has_roll();
  inline void clear_has_roll();
  inline void set_has_pitch();
  inline void clear_has_pitch();
  inline void set_has_yaw();
  inline void clear_has_yaw();
  inline void set_has_throttle();
  inline void clear_has_throttle();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  double roll_;
  double pitch_;
  double yaw_;
  double throttle_;
  friend void  protobuf_AddDesc_attitude_5fsetpoint_2eproto();
  friend void protobuf_AssignDesc_attitude_5fsetpoint_2eproto();
  friend void protobuf_ShutdownFile_attitude_5fsetpoint_2eproto();

  void InitAsDefaultInstance();
  static AttitudeSetpoint* default_instance_;
};
// ===================================================================


// ===================================================================

// AttitudeSetpoint

// required double roll = 1;
inline bool AttitudeSetpoint::has_roll() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AttitudeSetpoint::set_has_roll() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AttitudeSetpoint::clear_has_roll() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AttitudeSetpoint::clear_roll() {
  roll_ = 0;
  clear_has_roll();
}
inline double AttitudeSetpoint::roll() const {
  // @@protoc_insertion_point(field_get:wavesim_msgs.msgs.AttitudeSetpoint.roll)
  return roll_;
}
inline void AttitudeSetpoint::set_roll(double value) {
  set_has_roll();
  roll_ = value;
  // @@protoc_insertion_point(field_set:wavesim_msgs.msgs.AttitudeSetpoint.roll)
}

// required double pitch = 2;
inline bool AttitudeSetpoint::has_pitch() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AttitudeSetpoint::set_has_pitch() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AttitudeSetpoint::clear_has_pitch() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AttitudeSetpoint::clear_pitch() {
  pitch_ = 0;
  clear_has_pitch();
}
inline double AttitudeSetpoint::pitch() const {
  // @@protoc_insertion_point(field_get:wavesim_msgs.msgs.AttitudeSetpoint.pitch)
  return pitch_;
}
inline void AttitudeSetpoint::set_pitch(double value) {
  set_has_pitch();
  pitch_ = value;
  // @@protoc_insertion_point(field_set:wavesim_msgs.msgs.AttitudeSetpoint.pitch)
}

// required double yaw = 3;
inline bool AttitudeSetpoint::has_yaw() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void AttitudeSetpoint::set_has_yaw() {
  _has_bits_[0] |= 0x00000004u;
}
inline void AttitudeSetpoint::clear_has_yaw() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void AttitudeSetpoint::clear_yaw() {
  yaw_ = 0;
  clear_has_yaw();
}
inline double AttitudeSetpoint::yaw() const {
  // @@protoc_insertion_point(field_get:wavesim_msgs.msgs.AttitudeSetpoint.yaw)
  return yaw_;
}
inline void AttitudeSetpoint::set_yaw(double value) {
  set_has_yaw();
  yaw_ = value;
  // @@protoc_insertion_point(field_set:wavesim_msgs.msgs.AttitudeSetpoint.yaw)
}

// required double throttle = 4;
inline bool AttitudeSetpoint::has_throttle() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void AttitudeSetpoint::set_has_throttle() {
  _has_bits_[0] |= 0x00000008u;
}
inline void AttitudeSetpoint::clear_has_throttle() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void AttitudeSetpoint::clear_throttle() {
  throttle_ = 0;
  clear_has_throttle();
}
inline double AttitudeSetpoint::throttle() const {
  // @@protoc_insertion_point(field_get:wavesim_msgs.msgs.AttitudeSetpoint.throttle)
  return throttle_;
}
inline void AttitudeSetpoint::set_throttle(double value) {
  set_has_throttle();
  throttle_ = value;
  // @@protoc_insertion_point(field_set:wavesim_msgs.msgs.AttitudeSetpoint.throttle)
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace msgs
}  // namespace wavesim_msgs

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_attitude_5fsetpoint_2eproto__INCLUDED
