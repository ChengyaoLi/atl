// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: velocity_setpoint.proto

#ifndef PROTOBUF_velocity_5fsetpoint_2eproto__INCLUDED
#define PROTOBUF_velocity_5fsetpoint_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace wavesim_msgs {
namespace msgs {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_velocity_5fsetpoint_2eproto();
void protobuf_AssignDesc_velocity_5fsetpoint_2eproto();
void protobuf_ShutdownFile_velocity_5fsetpoint_2eproto();

class VelocitySetpoint;

// ===================================================================

class VelocitySetpoint : public ::google::protobuf::Message {
 public:
  VelocitySetpoint();
  virtual ~VelocitySetpoint();

  VelocitySetpoint(const VelocitySetpoint& from);

  inline VelocitySetpoint& operator=(const VelocitySetpoint& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const VelocitySetpoint& default_instance();

  void Swap(VelocitySetpoint* other);

  // implements Message ----------------------------------------------

  VelocitySetpoint* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const VelocitySetpoint& from);
  void MergeFrom(const VelocitySetpoint& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required double vx = 1;
  inline bool has_vx() const;
  inline void clear_vx();
  static const int kVxFieldNumber = 1;
  inline double vx() const;
  inline void set_vx(double value);

  // required double vy = 2;
  inline bool has_vy() const;
  inline void clear_vy();
  static const int kVyFieldNumber = 2;
  inline double vy() const;
  inline void set_vy(double value);

  // required double vz = 3;
  inline bool has_vz() const;
  inline void clear_vz();
  static const int kVzFieldNumber = 3;
  inline double vz() const;
  inline void set_vz(double value);

  // @@protoc_insertion_point(class_scope:wavesim_msgs.msgs.VelocitySetpoint)
 private:
  inline void set_has_vx();
  inline void clear_has_vx();
  inline void set_has_vy();
  inline void clear_has_vy();
  inline void set_has_vz();
  inline void clear_has_vz();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  double vx_;
  double vy_;
  double vz_;
  friend void  protobuf_AddDesc_velocity_5fsetpoint_2eproto();
  friend void protobuf_AssignDesc_velocity_5fsetpoint_2eproto();
  friend void protobuf_ShutdownFile_velocity_5fsetpoint_2eproto();

  void InitAsDefaultInstance();
  static VelocitySetpoint* default_instance_;
};
// ===================================================================


// ===================================================================

// VelocitySetpoint

// required double vx = 1;
inline bool VelocitySetpoint::has_vx() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void VelocitySetpoint::set_has_vx() {
  _has_bits_[0] |= 0x00000001u;
}
inline void VelocitySetpoint::clear_has_vx() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void VelocitySetpoint::clear_vx() {
  vx_ = 0;
  clear_has_vx();
}
inline double VelocitySetpoint::vx() const {
  // @@protoc_insertion_point(field_get:wavesim_msgs.msgs.VelocitySetpoint.vx)
  return vx_;
}
inline void VelocitySetpoint::set_vx(double value) {
  set_has_vx();
  vx_ = value;
  // @@protoc_insertion_point(field_set:wavesim_msgs.msgs.VelocitySetpoint.vx)
}

// required double vy = 2;
inline bool VelocitySetpoint::has_vy() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void VelocitySetpoint::set_has_vy() {
  _has_bits_[0] |= 0x00000002u;
}
inline void VelocitySetpoint::clear_has_vy() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void VelocitySetpoint::clear_vy() {
  vy_ = 0;
  clear_has_vy();
}
inline double VelocitySetpoint::vy() const {
  // @@protoc_insertion_point(field_get:wavesim_msgs.msgs.VelocitySetpoint.vy)
  return vy_;
}
inline void VelocitySetpoint::set_vy(double value) {
  set_has_vy();
  vy_ = value;
  // @@protoc_insertion_point(field_set:wavesim_msgs.msgs.VelocitySetpoint.vy)
}

// required double vz = 3;
inline bool VelocitySetpoint::has_vz() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void VelocitySetpoint::set_has_vz() {
  _has_bits_[0] |= 0x00000004u;
}
inline void VelocitySetpoint::clear_has_vz() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void VelocitySetpoint::clear_vz() {
  vz_ = 0;
  clear_has_vz();
}
inline double VelocitySetpoint::vz() const {
  // @@protoc_insertion_point(field_get:wavesim_msgs.msgs.VelocitySetpoint.vz)
  return vz_;
}
inline void VelocitySetpoint::set_vz(double value) {
  set_has_vz();
  vz_ = value;
  // @@protoc_insertion_point(field_set:wavesim_msgs.msgs.VelocitySetpoint.vz)
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace msgs
}  // namespace wavesim_msgs

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_velocity_5fsetpoint_2eproto__INCLUDED
