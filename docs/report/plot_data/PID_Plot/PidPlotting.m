% plots for the PIDs
clc;
close all;
clear all;

load('Pid Plotting Data.mat')

figure(1)
% plot z with the setpoint.
% [ax,h1,h2] = plotyy(Time, True_z, Time, Pid_z_Kp, 'plot') ;
% hold(ax(1))
% plot(ax(1), Time, setpointz, 'm')
% hold(ax(2))
% plot(ax(2), Time, Pid_z_Kd,'r')

% fixing the Kd data file
x = Pid_z_Kd;
x(Pid_z_Kd == 0 ) = [];
xt = Time;
xt(Pid_z_Kd == 0 ) = [];
Kd_z_interpolated = interp1(xt,x,Time);

% plot z with the setpoint.
[ax,h1,h2] = plotyy(Time, True_z, Time, Pid_z_Kp*10, 'plot') ;
hold(ax(1))
plot(ax(1), Time, setpointz, 'm')
hold(ax(2), 'on')
plot(ax(2), Time, Kd_z_interpolated*10,'r')
hold(ax(2), 'off')
set(ax(1),  'YLimMode', 'manual', 'YTickMode', 'auto',...
            'YMinorTick', 'on', 'Fontsize', 12, ...
            'FontWeight', 'bold', ...
            'YColor', 'k')
     
set(ax(2), 'YLimMode', 'auto', 'YTickMode', 'auto',...
            'YMinorTick', 'on', 'Fontsize', 12, ...
            'FontWeight', 'bold', ...
            'YColor', 'k')
set(ax(2),'Box','Off')
set(ax(1),'Box','Off')

ylabel(ax(1), 'Commanded Position [meters]',...
               'Fontsize', 15, ...
               'FontWeight', 'normal');
ylabel(ax(2), 'PID Gains [Percentage Change in Thrust]',...
               'Fontsize', 15, ...
               'FontWeight', 'normal', ...
               'color', 'k');
xlabel('Time [seconds]',...
             'Fontsize', 15, ...
             'FontWeight', 'normal');
legend('True Elevation [m]', ...
       'Set Elevation [m]', ...
       'Proporitional Gain [Precentage of Thrust]', ...
       'Derivative Gain [Percentage of Thrust]')
                                

%axis([0 3.5 -0.2 0.2]);

figure(2)

setpointx = setpointz*0;
% fixing the Kd data file
x = PidPitch_kd(1:end-15);
x(PidPitch_kd(1:end-15) == 0 ) = [];
xt = Time;
xt(PidPitch_kd(1:end-15) == 0) = [];
Kd_pitch_interpolated = interp1(xt,x,Time);

% plot z with the setpoint.
[ax,h1,h2] = plotyy(Time, True_x, Time, rad2deg(PidPitch_kp(1:end-15)), 'plot') ;
hold(ax(1))
plot(ax(1), Time, setpointx, 'm')
hold(ax(2), 'on')
plot(ax(2), Time, rad2deg(PidPitch_ki(1:end-15)), 'g', Time, rad2deg(Kd_pitch_interpolated),'r' )
set(ax(1),  'YLimMode', 'auto', 'YTickMode', 'auto',...
            'YMinorTick', 'on', 'Fontsize', 12, ...
            'FontWeight', 'bold', ...
            'YColor', 'k', 'ylim', [-1 1])
     
set(ax(2), 'YLimMode', 'auto', 'YTickMode', 'auto',...
            'YMinorTick', 'on', 'Fontsize', 12, ...
            'FontWeight', 'bold', ...
            'YColor', 'k', 'ylim', [-30 30])
set(ax(2),'Box','Off')
set(ax(1),'Box','Off')

ylabel(ax(1), 'Commanded Position [meters]',...
               'Fontsize', 15, ...
               'FontWeight', 'normal');
ylabel(ax(2), 'PID Gains [Degrees]',...
               'Fontsize', 15, ...
               'FontWeight', 'normal', ...
               'color', 'k');
xlabel('Time [seconds]',...
             'Fontsize', 15, ...
             'FontWeight', 'normal');
legend('True X Position [m]', ...
       'Set X Position [m]', ...
       'Proporitional Gain [degrees]', ...
       'Integral Gain [degrees]', ...
       'Derivative Gain [degrees]')
                                



figure(3)

setpointx = setpointz*0;
% fixing the Kd data file
x = PidRoll_kd(1:end-15);
x(PidRoll_kd(1:end-15) == 0 ) = [];
xt = Time;
xt(PidRoll_kd(1:end-15) == 0) = [];
Kd_roll_interpolated = interp1(xt,x,Time);

% plot z with the setpoint.
[ax,h1,h2] = plotyy(Time, True_y, Time, rad2deg(PidRoll_kp(1:end-15)), 'plot') ;
hold(ax(1))
plot(ax(1), Time, setpointx, 'm')
hold(ax(2), 'on')
plot(ax(2), Time, rad2deg(PidRoll_ki(1:end-15)), 'g', Time, rad2deg(Kd_roll_interpolated),'r' )
set(ax(1),  'YLimMode', 'auto', 'YTickMode', 'auto',...
            'YMinorTick', 'on', 'Fontsize', 12, ...
            'FontWeight', 'bold', ...
            'YColor', 'k', 'ylim', [-1 1])
     
set(ax(2), 'YLimMode', 'auto', 'YTickMode', 'auto',...
            'YMinorTick', 'on', 'Fontsize', 12, ...
            'FontWeight', 'bold', ...
            'YColor', 'k', 'ylim', [-30 30])
set(ax(2),'Box','Off')
set(ax(1),'Box','Off')

ylabel(ax(1), 'Commanded Position [meters]',...
               'Fontsize', 15, ...
               'FontWeight', 'normal');
ylabel(ax(2), 'PID Gains [Degrees]',...
               'Fontsize', 15, ...
               'FontWeight', 'normal', ...
               'color', 'k');
xlabel('Time [seconds]',...
             'Fontsize', 15, ...
             'FontWeight', 'normal');
legend('True Y Position [m]', ...
       'Set Y Position [m]', ...
       'Proporitional Gain [degrees]', ...
       'Integral Gain [degrees]', ...
       'Derivative Gain [degrees]')